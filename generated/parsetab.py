
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '407E8FDF419E840060B18BF986AC9A78'
    
_lr_action_items = {'IDENTIFIER':([0,2,5,8,10,14,16,19,20,21,],[1,9,9,9,9,9,1,9,1,9,]),';':([4,6,7,9,11,13,15,17,18,24,26,27,28,],[-4,16,-3,-11,-9,-10,-5,-15,-13,-8,-7,-12,-6,]),'ADD_OP':([2,5,8,9,10,11,12,13,14,15,17,18,19,21,22,24,26,27,],[10,10,10,-11,10,-9,21,-10,10,21,21,-13,10,10,21,-8,-7,-12,]),'$end':([3,4,6,7,9,11,13,15,17,18,23,24,26,27,28,],[0,-4,-1,-3,-11,-9,-10,-5,-15,-13,-2,-8,-7,-12,-6,]),'WHILE':([0,16,20,],[2,2,2,]),'NUMBER_FLOAT':([2,5,8,10,14,19,21,],[13,13,13,13,13,13,13,]),'(':([2,5,8,10,14,19,21,],[14,14,14,14,14,14,14,]),'PRINT':([0,16,20,],[5,5,5,]),')':([9,11,13,18,22,24,26,27,],[-11,-9,-10,-13,27,-8,-7,-12,]),'=':([1,],[8,]),'MUL_OP':([9,11,12,13,15,17,18,22,24,26,27,],[-11,-9,19,-10,19,19,-13,19,-8,19,-12,]),'NUMBER_INT':([2,5,8,10,14,19,21,],[11,11,11,11,11,11,11,]),'}':([4,6,7,9,11,13,15,17,18,23,24,25,26,27,28,],[-4,-1,-3,-11,-9,-10,-5,-15,-13,-2,-8,28,-7,-12,-6,]),'{':([9,11,12,13,18,24,26,27,],[-11,-9,20,-10,-13,-8,-7,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,16,20,],[3,23,25,]),'expression':([2,5,8,10,14,19,21,],[12,15,17,18,22,24,26,]),'structure':([0,16,20,],[4,4,4,]),'statement':([0,16,20,],[6,6,6,]),'assignation':([0,16,20,],[7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser.py',17),
  ('statement -> structure','statement',1,'p_statement','parser.py',18),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser.py',22),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser.py',26),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser.py',30),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser.py',31),
  ('expression -> NUMBER_INT','expression',1,'p_expression_num_or_var','parser.py',35),
  ('expression -> NUMBER_FLOAT','expression',1,'p_expression_num_or_var','parser.py',36),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser.py',37),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser.py',41),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser.py',45),
  ('declaration -> TYPE IDENTIFIER = expression','declaration',4,'p_declaration','parser.py',49),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser.py',54),
]
